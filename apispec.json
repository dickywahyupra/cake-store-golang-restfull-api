{
  "openapi": "3.0.3",
  "info": {
    "title": "Golang RESTful API for Cake Store",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8081/api"
    }
  ],
  "paths": {
    "/cakes": {
      "get": {
        "tags": ["Getter Cake API "],
        "security": [
          {
            "Auth": []
          }
        ],
        "summary": "List all cakes",
        "description": "This API will return all cakes list",
        "responses": {
          "200": {
            "description": "Success get data all cakes list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CakeResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Action Cake API "],
        "security": [
          {
            "Auth": []
          }
        ],
        "summary": "Create new cake",
        "description": "This API will create new cake data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new cake",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CakeResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/cakes/{id}": {
      "get": {
        "tags": ["Getter Cake API "],
        "security": [
          {
            "Auth": []
          }
        ],
        "summary": "Filter cakes list by id",
        "description": "This API will return cakes list from given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id cake",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get data cakes list from id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CakeResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": ["Action Cake API "],
        "security": [
          {
            "Auth": []
          }
        ],
        "summary": "Update cake by id",
        "description": "This API will update cake data from given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id cake",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update cake",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CakeResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Action Cake API "],
        "security": [
          {
            "Auth": []
          }
        ],
        "summary": "Delete cake by id",
        "description": "This API will delete cake data from given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id cake",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete cake",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CakeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "image": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "CakeRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "image": {
            "type": "string"
          }
        },
        "required": ["title"],
        "example": {
          "title": "Lemon cheesecake",
          "description": "A cheesecake made of lemon",
          "rating": 7.3,
          "image": "https://img.taste.com.au/ynYrqkOs/w720-h480-cfill-q80/taste/2016/11/sunny-lemon-cheesecake-102220-1.jpeg"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Error: Data not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Error: Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Auth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Fill the value with : ROOT"
      }
    }
  }
}
